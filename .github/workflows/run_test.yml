name: Run Tests via Pytest on Linux, Unix and Windows

on: [push]  

jobs:  
  build:  
    runs-on: ${{ matrix.os }}
    strategy:  
      matrix:  
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10"]  

    steps:  
      - uses: actions/checkout@v4  
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:  
          python-version: ${{ matrix.python-version }}  
      - name:  Install dependencies ${{ matrix.os }}
        run: |
              python -m pip install --upgrade pip  
              python -m venv .ml2sql
              if [ "$RUNNER_OS" == "Windows" ]; then
                    ".ml2sql\Scripts\python.exe" -m pip install --index-url https://pypi.org/simple -r "docs\requirements-dev.txt"
              else
                    .ml2sql/bin/python -m pip install --index-url https://pypi.org/simple -r docs/requirements-dev.txt  
              fi
        shell: bash
      - name: Lint with Ruff  
        run: |
              if [ "$RUNNER_OS" == "Windows" ]; then
                    ".ml2sql\Scripts\ruff" --output-format=github .
              else
                    .ml2sql/bin/ruff --output-format=github .
              fi  
        shell: bash 
        continue-on-error: true  
      - name: Test with pytest
        run: |  
              echo "scripts" >> $GITHUB_PATH
              if [ "$RUNNER_OS" == "Windows" ]; then
                    ".ml2sql\Scripts\pip" install pytest pytest-cov
                    ".ml2sql\Scripts\pytest" --doctest-modules --junitxml=junit/test-results.xml --cov-report=html
              else
                    .ml2sql/bin/pip install pytest pytest-cov
                    .ml2sql/bin/pytest --doctest-modules --junitxml=junit/test-results.xml --cov-report=html  
              fi  
        shell: bash 
      - name: Generate Coverage Report  
        run: |  
              if [ "$RUNNER_OS" == "Windows" ]; then
                    ".ml2sql\Scripts\coverage" report -m
              else
                    .ml2sql/bin/coverage report -m
              fi  
        shell: bash  
          
